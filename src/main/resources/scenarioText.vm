#*
 * Copyright 2011 eBusiness Information, Groupe Excilys (www.excilys.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *#
	val PROTOCOL = "$protocol"
	val DOMAIN = "$domain"
#if ($port != -1)
	val PORT = "$port"
#end
	val urlBase = $urlBase
	
	val httpConf = httpConfig.baseURL(urlBase)
	
#foreach($url in $urls.entrySet())
	val $url.key = "$url.value"
#end
	
#foreach ($h in $headers.entrySet())
	val $h.key = Map(
#foreach ($header in $h.value.entrySet())
		"$header.key" -> "$header.value"#if($foreach.hasNext), 
#else
	
		)
#end
#end
	
#end
	
	val scn = scenario("$name")
#foreach($req in $reqs)
#if($req.class.simpleName == "TagEvent")
		/* $req.getTag() */
#else
		.exec(
			http("request_$req.getId()")
			$req.getCorrespondingRequest().getMethod().toString().toLowerCase()(url_$req.getId())
	#foreach($param in $req.getParams().entrySet())
#foreach($val in $param.value)
		param("$param.key", "$val")
#end
	#end
		headers(headers_$req.getId())
	#if($req.isWithBody())
		withFile("request_${req.getId()}.txt")
	#end
		)
#end
#end
	
	val scnConf = scn.configure users 1 protocolConfig httpConf
	runSimulations(scnConf)